The `2-matrix_divided` module
=============================

Using matrix_divided
====================

Import function from module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test matrix:

	>>> matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6]
	...	]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Must be a matrix(list of lists):

	>>> matrix = [2, 4, "Blah"]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Must be a matrix(list of lists) of integers/floats:

	>>> matrix = [
	...		["ask", 5, "blah"],
	...		[6, 3, "huh"]
	...	]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row must have of the same size:

	>>> matrix = [
	...		[1, 3, 4],
	...		[8, 2],
	...		[6]
	...	]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

`div` must be a number(integer or float):

	>>> matrix = [
	...		[1, 2, 3],
	...		[4, 5, 6]
	...	]
	>>> print(matrix_divided(matrix, "wow!"))
	Traceback (most recent call last):
		...
	TypeError: div must be a number

`div` can't be a complex number:

	>>> print(matrix_divided(matrix, 3j))
	Traceback (most recent call last):
		...
	TypeError: div must be a number

`div` can't be equal to zero:

	>>> matrix = [[2], [3]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Float overflow in `div`:

	>>> matrix = [[2, 4], [6, 3]]
	>>> print(matrix_divided(matrix, float("inf")))
	[[0.0, 0.0], [0.0, 0.0]]

Float overflow in `matrix`:

	>>> matrix = [
	...		[6, float("inf")],
	...		[9, 4]
	...	]
	>>> print(matrix_divided(matrix, 3))
	[[2.0, inf], [3.0, 1.33]]

Float overflow in `matrix` and `div`:

	>>> matrix = [
	...		[1, 2, float("inf")],
	...		[4, 5, 6]
	...	]
	>>> print(matrix_divided(matrix, float("inf")))
	[[0.0, 0.0, nan], [0.0, 0.0, 0.0]]

